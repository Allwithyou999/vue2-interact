{"version":3,"file":"vue2-interact.esm.js","sources":["../src/interact-event-bus.js","../src/components/Vue2InteractDraggable.vue","../src/index.js"],"sourcesContent":["import Vue from 'vue';\n\nexport default new Vue();\n","<template>\n  <div\n    ref=\"interactElement\"\n    :class=\"{ 'vue-interact-animated': interactIsAnimating }\"\n    :style=\"{\n      transform: interactTransformString,\n      transition: interactTransitionString\n    }\"\n  >\n    <slot />\n  </div>\n</template>\n\n<script>\nimport interact from 'interact.js';\nimport InteractEventBus from '../interact-event-bus';\n\nexport default {\n  interactOutOfSightXCoordinate: 500,\n  interactOutOfSightYCoordinate: 1000,\n  interactYThreshold: 300,\n  interactXThreshold: 200,\n\n  props: {\n    interactBlockDragDown: {\n      type: Boolean,\n      default: false,\n    },\n    interactBlockDragLeft: {\n      type: Boolean,\n      default: false,\n    },\n    interactBlockDragRight: {\n      type: Boolean,\n      default: false,\n    },\n    interactBlockDragUp: {\n      type: Boolean,\n      default: false,\n    },\n    interactEventBusEvents: {\n      type: Object,\n      default: () => {},\n    },\n    interactIsCurrent: {\n      type: Boolean,\n      default: true,\n    },\n    interactMaxRotation: {\n      type: Number,\n      default: 0,\n    },\n    interactLockXAxis: {\n      type: Boolean,\n      default: false,\n    },\n    interactLockYAxis: {\n      type: Boolean,\n      default: false,\n    },\n    interactLockSwipeDown: {\n      type: Boolean,\n      default: false,\n    },\n    interactLockSwipeLeft: {\n      type: Boolean,\n      default: false,\n    },\n    interactLockSwipeRight: {\n      type: Boolean,\n      default: false,\n    },\n    interactLockSwipeUp: {\n      type: Boolean,\n      default: false,\n    },\n  },\n\n  data() {\n    return {\n      interactIsAnimating: true,\n      interactDragged: null,\n      interactPosition: {\n        x: 0,\n        y: 0,\n        rotation: 0,\n      },\n    };\n  },\n\n  computed: {\n    interactTransformString() {\n      if (!this.interactIsAnimating || this.interactDragged) {\n        const { x, y, rotation } = this.interactPosition;\n        return `translate3D(${x}px, ${y}px, 0) rotate(${rotation}deg)`;\n      }\n\n      return null;\n    },\n\n    interactTransitionString() {\n      if (this.interactIsAnimating) return 'transform 0.5s cubic-bezier(0.175, 0.885, 0.32, 1.275)';\n\n      return null;\n    },\n  },\n\n  watch: {\n    interactEventBusEvents(val) {\n      this.interactSetEventBusEvents();\n    },\n  },\n\n  mounted() {\n    this.interactSetEventBusEvents();\n\n    const element = this.$refs.interactElement;\n\n    interact(element).draggable({\n      onstart: () => {\n        this.interactIsAnimating = false;\n      },\n\n      onmove: (event) => {\n        let x = 0;\n        let y = 0;\n\n        if (this.interactLockSwipeLeft && event.dx < 0) x = 0;\n        else if (this.interactLockSwipeRight && event.dx > 0) x = 0;\n        else x = this.interactLockXAxis ? 0 : (this.interactPosition.x || 0) + event.dx;\n\n        if (this.interactLockSwipeUp && event.dy < 0) y = 0;\n        else if (this.interactLockSwipeDown && event.dy > 0) y = 0;\n        else y = this.interactLockYAxis ? 0 : (this.interactPosition.y || 0) + event.dy;\n\n        let rotation = this.interactMaxRotation * (x / this.$options.interactXThreshold);\n\n        if (rotation > this.interactMaxRotation) rotation = this.interactMaxRotation;\n        else if (rotation < -this.interactMaxRotation) rotation = -this.interactMaxRotation;\n\n        this.interactSetPosition({ x, y, rotation });\n      },\n\n      onend: () => {\n        const { x: cardPositionX, y: cardPositionY } = this.interactPosition;\n        const { interactXThreshold, interactYThreshold } = this.$options;\n        this.interactIsAnimating = true;\n\n        if (cardPositionX > interactXThreshold) this.interactDraggedRight();\n        else if (cardPositionX < -interactXThreshold) this.interactDraggedLeft();\n        else if (cardPositionY > interactYThreshold) this.interactDraggedDown();\n        else this.interactResetCardPosition();\n      },\n    });\n  },\n\n  beforeDestroy() {\n    this.interactUnsetEventBusEvents();\n  },\n\n  methods: {\n    interactDraggedDown() {\n      if (!this.interactIsCurrent) return;\n      if (this.interactBlockDragDown) {\n        this.interactResetCardPosition();\n        return;\n      }\n      this.interactUnsetElement();\n      this.interactSetPosition({ y: this.$options.interactOutOfSightYCoordinate });\n      this.$emit('draggedDown');\n    },\n\n    interactDraggedLeft() {\n      if (!this.interactIsCurrent) return;\n      if (this.interactBlockDragLeft) {\n        this.interactResetCardPosition();\n        return;\n      }\n      this.interactUnsetElement();\n      this.interactSetPosition({\n        x: -this.$options.interactOutOfSightXCoordinate,\n        rotation: -this.interactMaxRotation,\n      });\n      this.$emit('draggedLeft');\n    },\n\n    interactDraggedRight() {\n      if (!this.interactIsCurrent) return;\n      if (this.interactBlockDragRight) {\n        this.interactResetCardPosition();\n        return;\n      }\n      this.interactUnsetElement();\n      this.interactSetPosition({\n        x: this.$options.interactOutOfSightXCoordinate,\n        rotation: this.interactMaxRotation,\n      });\n      this.$emit('draggedRight');\n    },\n\n    interactDraggedUp() {\n      if (!this.interactIsCurrent) return;\n      if (this.interactBlockDragUp) {\n        this.interactResetCardPosition();\n        return;\n      }\n      this.interactUnsetElement();\n      this.interactSetPosition({ y: -this.$options.interactOutOfSightYCoordinate });\n      this.$emit('draggedUp');\n    },\n\n    interactSetEventBusEvents() {\n      if (this.interactEventBusEvents) {\n        if (this.interactEventBusEvents.draggedDown) {\n          InteractEventBus.$on(this.interactEventBusEvents.draggedDown, this.interactDraggedDown);\n        };\n\n        if (this.interactEventBusEvents.draggedLeft) {\n          InteractEventBus.$on(this.interactEventBusEvents.draggedLeft, this.interactDraggedLeft);\n        };\n\n        if (this.interactEventBusEvents.draggedRight) {\n          InteractEventBus.$on(this.interactEventBusEvents.draggedRight, this.interactDraggedRight);\n        };\n\n        if (this.interactEventBusEvents.draggedUp) {\n          InteractEventBus.$on(this.interactEventBusEvents.draggedUp, this.interactDraggedUp);\n        };\n      }\n    },\n\n    interactSetPosition(coordinates) {\n      const { x, y, rotation } = coordinates;\n\n      if (Number.isFinite(x)) this.interactPosition.x = x;\n      if (Number.isFinite(y)) this.interactPosition.y = y;\n      if (Number.isFinite(rotation)) this.interactPosition.rotation = rotation;\n    },\n\n    interactUnsetElement() {\n      interact(this.$refs.interactElement).unset();\n      this.interactDragged = true;\n    },\n\n    interactUnsetEventBusEvents() {\n      if (this.interactEventBusEvents) {\n        if (this.interactEventBusEvents.draggedDown) {\n          InteractEventBus.$off(this.interactEventBusEvents.draggedDown, this.draggedDown);\n        };\n\n        if (this.interactEventBusEvents.draggedLeft) {\n          InteractEventBus.$off(this.interactEventBusEvents.draggedLeft, this.draggedLeft);\n        };\n\n        if (this.interactEventBusEvents.draggedRight) {\n          InteractEventBus.$off(this.interactEventBusEvents.draggedRight, this.draggedRight);\n        };\n\n        if (this.interactEventBusEvents.draggedUp) {\n          InteractEventBus.$off(this.interactEventBusEvents.draggedUp, this.draggedUp);\n        };\n      }\n    },\n\n    interactResetCardPosition() {\n      this.interactSetPosition({ x: 0, y: 0, rotation: 0 });\n    }\n  },\n};\n</script>\n","import Vue2InteractDraggable from './components/Vue2InteractDraggable.vue'\nimport InteractEventBus from './interact-event-bus.js';\n\nconst plugin = {\n  install (Vue) {\n    Vue.component('Vue2InteractDraggable', Vue2InteractDraggable)\n  }\n}\n\nexport { Vue2InteractDraggable };\nexport { InteractEventBus };\n\n// Auto-install\nlet GlobalVue = null\nif (typeof window !== 'undefined') {\n  GlobalVue = window.Vue\n} else if (typeof global !== 'undefined') {\n  GlobalVue = global.Vue\n}\nif (GlobalVue) {\n  GlobalVue.use(plugin)\n}\n"],"names":["Vue","render","_vm","interactTransformString","interactTransitionString","_t","Boolean","Object","Number","element","interactIsAnimating","x","y","interactLockSwipeRight","event","dx","interactLockXAxis","interactPosition","interactLockSwipeDown","dy","rotation","interactMaxRotation","$options","interactXThreshold","interactSetPosition","interactYThreshold","cardPositionX","interactUnsetEventBusEvents","interactResetCardPosition","$emit","interactUnsetElement","interactOutOfSightXCoordinate","$on","interactEventBusEvents","coordinates","isFinite","interactDragged","$off","plugin","component","Vue2InteractDraggable","GlobalVue","window","global","use"],"mappings":";;;AAEA,uBAAe,IAAIA,GAAJ,EAAf;;ACeA,4BAAe,EAACC;;mBACDC,IAAIC;oBACHD,IAAIE;WACd,CAACF,IAAIG,EAAJ,CAAO,SAAP,CAAD,GAAoB;GAHX,qBAAA;oCAAA;qCAAA;yBAAA;sBAOO,GAPP;;SASN;;YAEGC;eACG;KAHN;;YAMGA;eACG;KAPN;;YAUGA;eACG;KAXN;;YAcGA;eACG;KAfN;;YAkBGC;eACG;KAnBN;;YAsBGD;eACG;KAvBN;;YA0BGE;eACG;KA3BN;;YA8BGF;eACG;KA/BN;;YAkCGA;eACG;KAnCN;;YAsCGA;eACG;KAvCN;;YA0CGA;eACG;KA3CN;;YA8CGA;eACG;KA/CN;;;;;GATM;;SAgEN;WACE;+BAAA;2BAAA;;;;;;KAAP;GAjEW;;YA4EH;8BACkB;2DACxB;;eAEU,uDAAR;;;aAGK,IAAP;KAPM;;;kCAWN;;;;GAvFS;;;8BA8FX;;;GA9FW;;YAmGH;;;UAGFG,UAAU,UAAA,gBAAhB;;oBAEA,WAAA;;aAESC,mBAAL,QAAA;;;;YAIIC,IAAI,CAAR;YACIC,IAAI,CAAR;;mEAGK,IAAI,KAAKC,sBAAL,IAA+BC,MAAMC,EAAN,GAAW,CAA9C,QAAA,KACAJ,IAAI,KAAKK,iBAAL,GAAyB,CAAzB,GAA6B,CAAC,KAAKC,gBAAL,EAAA,KAAD,YAAjC;;iEAGA,IAAI,KAAKC,qBAAL,IAA8BJ,MAAMK,EAAN,GAAW,CAA7C,EAAgDP,IAAI,CAAJ,CAAhD;;YAGDQ,WAAW,KAAKC,mBAAL,IAA4BV,IAAI,KAAKW,QAAL,CAAcC,kBAA9C,CAAf;;YAEIH,WAAW,KAAKC,mBAApB,EAAyCD,mCAAA,CAAzC;;aAGKI,mBAAL,mBAAA;;;aAGK,MAAM;;cAEL,EAAED,kBAAF,EAAsBE,kBAAtB,KAA6C,KAAKH,QAAxD;aACKZ,mBAAL,GAA2B,IAA3B;;YAEIgB,gBAAgBH,kBAApB,8BAAA;;KA9BJ;GAxGW;;;SA+INI,2BAAL;GA/IW;;WAkJJ;0BACe;UAChB,CAAC,sBAAL;oCACA;aACOC,yBAAL;;;+BAGF;;WAEKC,KAAL,CAAW,aAAX;KATK;;0BAYe;UAChB,CAAC,sBAAL;oCACA;aACOD,yBAAL;;;WAGGE,oBAAL;8BACA;WACK,CAAC,KAAKR,QAAL,CAAcS;;OADpB;WAIKF,KAAL,CAAW,aAAX;KAvBK;;2BA0BgB;UACjB,CAAC,sBAAL;qCACA;aACOD,yBAAL;;;WAGGE,oBAAL;8BACA;WACK,KAAKR,QAAL,CAAcS;;OADnB;WAIKF,KAAL,CAAW,cAAX;KArCK;;wBAwCa;UACd,CAAC,sBAAL;kCACA;aACOD,yBAAL;;;+BAGF;;WAEKC,KAAL,CAAW,WAAX;KAhDK;;gCAmDqB;UACtB,2BAAJ;;2BAEqBG,GAAjB,CAAqB,KAAKC,sBAAL,YAArB,0BAAA;;;2BAIiBD,GAAjB,CAAqB,KAAKC,sBAAL,YAArB,0BAAA;;;2BAIiBD,GAAjB,CAAqB,KAAKC,sBAAL,aAArB,2BAAA;;;;SAMH;KApEI;;wBAuEaC,WAApB,EAAiC;YACzB,EAAEvB,CAAF,EAAKC,CAAL,EAAQQ,QAAR,KAAqBc,WAA3B;;4BAEA;;UAEI1B,OAAO2B,QAAP,CAAgBf,QAAhB,CAAJ;KA5EK;;;;WAiFAgB,eAAL,GAAuB,IAAvB;KAjFK;;kCAoFuB;UACxB,2BAAJ;;2BAEqBC,IAAjB,CAAsB,KAAKJ,sBAAL,YAAtB,kBAAA;;;2BAIiBI,IAAjB,CAAsB,KAAKJ,sBAAL,YAAtB,kBAAA;;;2BAIiBI,IAAjB,CAAsB,KAAKJ,sBAAL,aAAtB,mBAAA;;;;SAMH;KArGI;;;;;;CAlJX;;ACdA,MAAMK,SAAS;UACJtC,MAAT,EAAc;WACRuC,SAAJ,CAAc,uBAAd,EAAuCC,qBAAvC;;CAFJ;;;AAUA,IAAIC,YAAY,IAAhB;AACA,IAAI,OAAOC,MAAP,KAAkB,WAAtB,EAAmC;cACrBA,OAAO1C,GAAnB;CADF,MAEO,IAAI,OAAO2C,MAAP,KAAkB,WAAtB,EAAmC;cAC5BA,OAAO3C,GAAnB;;AAEF,IAAIyC,SAAJ,EAAe;YACHG,GAAV,CAAcN,MAAd;;;;;"}